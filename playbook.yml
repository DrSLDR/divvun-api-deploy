---
- hosts: all
  vars:
    user_name: api

  tasks:
  - name: Install Docker prerequisites
    become: true
    apt:
      update_cache: true
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release

  - name: Install Docker's GPG key
    become: true
    shell:
      cmd: >-
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg |
        gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      creates: /usr/share/keyrings/docker-archive-keyring.gpg

  - name: Set up the Docker repository
    become: true
    shell:
      cmd: >-
        echo
        "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
        https://download.docker.com/linux/ubuntu
        $(lsb_release -cs) stable" |
        tee /etc/apt/sources.list.d/docker.list > /dev/null
      creates: /etc/apt/sources.list.d/docker.list

  - name: Install Docker
    become: true
    apt:
      update_cache: true
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io

  - name: Ensure Docker service is started and enabled
    become: true
    service:
      name: docker.service
      enabled: true
      state: started

  - name: Create a Docker usergroup
    become: true
    group:
      name: docker
      state: present

  - name: Create {{ user_name }} user
    become: true
    user:
      name: "{{ user_name }}"
      append: true
      groups: docker

  - name: Create distribution directory
    become: true
    file:
      owner: "{{ user_name }}"
      group: "{{ user_name }}"
      mode: 0755
      state: directory
      path: /home/{{ user_name }}/dist

  - name: Ensure the distribution archive is ready
    file:
      path: dist.tar.gz
      state: file
    delegate_to: localhost

  - name: Deploy the dist
    become: true
    unarchive:
      src: dist.tar.gz
      dest: /home/{{ user_name }}/dist
      owner: "{{ user_name }}"
      creates: /home/{{ user_name }}/dist/divvun-api.tar.gz
